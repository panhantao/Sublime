%%%-----------------------------------------------------------------------------
%%% Module  : ${1:module_name}
%%% Author  : ${2:${author}}
%%% Created : ${date}
%%% Description : ${3: }
%%%
%%%-----------------------------------------------------------------------------
-module (${4:}).
-behaviour(gen_event).

%%------------------------------------------------------------------------------
%% Include files
%%------------------------------------------------------------------------------
${5:}

%%==============================================================================
%% External exports
%%==============================================================================
-export ([
    start_link/0,
    add_handler/0
]).

%% gen_event callbacks
-export ([
    init/1,
    handle_event/2,
    handle_call/2,
    handle_info/2,
    terminate/2,
    code_change/3
]).

%%------------------------------------------------------------------------------
%% Records
%%------------------------------------------------------------------------------
-record(state, {}).

%%==============================================================================
%% External functions
%%==============================================================================
%%------------------------------------------------------------------------------
%% Function: start_link/0
%% Description: Starts the server
%%------------------------------------------------------------------------------
start_link() ->
    gen_event:start_link({local, ?MODULE}).

%%------------------------------------------------------------------------------
%% Function: add_handler/0
%% Description: Adds an event handler
%%------------------------------------------------------------------------------
add_handler() ->
    gen_event:add_handler(?MODULE, ?MODULE, []).

%%==============================================================================
%% Server functions
%%==============================================================================
%%------------------------------------------------------------------------------
%% Function: init/1
%% Description: Initialize the event handler
%% Returns: {ok, State}             |
%%          {ok, State, hibernate}  |
%%          {error, Reason}
%%------------------------------------------------------------------------------
init(_Args) ->
    process_flag(trap_exit, true),
    {ok, #state{}}.

%%------------------------------------------------------------------------------
%% Function: handle_event/2
%% Returns: {ok, NewState}                                      |
%%          {ok, NewState, hibernate}                           |
%%          {swap_handler, Args1, NewState, Handler2, Args2}    |
%%          remove_handler
%%------------------------------------------------------------------------------
handle_event(Event, State) ->
    {ok, State}.

%%------------------------------------------------------------------------------
%% Function: handle_call/2
%% Returns: {ok, Reply, NewState}                                    |
%%          {ok, Reply, NewState, hibernate}                         |
%%          {swap_handler, Reply, Args1, NewState, Handler2, Args2}  |
%%          {remove_handler, Reply}
%%------------------------------------------------------------------------------
handle_call(Request, State) ->
    Reply = ok,
    {ok, Reply, State}.

%%------------------------------------------------------------------------------
%% Function: handle_info/2
%% Returns: Any
%%------------------------------------------------------------------------------
handle_info(Info, State) ->
    {ok, State}.

%%------------------------------------------------------------------------------
%% Function: terminate/2
%% Returns: {ok, NewState}                                      |
%%          {ok, NewState, hibernate}                           |
%%          {swap_handler, Args1, NewState, Handler2, Args2}    |
%%          remove_handler
%%------------------------------------------------------------------------------
terminate(Reason, State) ->
    try
        ok
    catch
        _:Ex ->
            %% todo error handling
            ok
    end.

%%------------------------------------------------------------------------------
%% Function: code_change/3
%% Description: Convert process state when code is changed
%% Returns: {ok, NewState}
%%------------------------------------------------------------------------------
code_change(_OldVsn, State, _Extra) ->
    {ok, State}.

%%==============================================================================
%% Internal functions
%%==============================================================================